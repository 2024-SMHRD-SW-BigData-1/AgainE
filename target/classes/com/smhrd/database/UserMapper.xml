<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<!--  회원 테이블에 사용할 Mapper  -->



<mapper namespace="UserMapper">
	
	<!-- sql문 작성  -->
	
	
	<!-- id 중복체크  -->
	<select id="checkUserid" parameterType="String" resultType="Integer">
		select count(*) from tb_user where user_id = #{user_id}
	</select>
	
	
	<!-- 회원가입  -->
	<insert id="joinUser" parameterType="User">
		insert into tb_user 
		values (#{user_id}, SHA(#{user_pw}), #{user_name}, #{user_email}, #{user_phone}, #{user_addr},
		null, null ,null,  #{joined_at}, #{user_type})
	</insert>
	
	<!-- 로그인 -->
	<select id="loginUser" parameterType="User" resultType="User">
		select * from tb_user where user_id=#{user_id} and user_pw=SHA(#{user_pw})
	</select>
	
	<!-- 회원 방 정보 업데이트 -->
	<update id="updateUserRoom" parameterType="User">
		update tb_user 
		set user_room_tone = #{user_room_tone}, user_room_color = #{user_room_color}, user_room_url = #{user_room_url}
		where user_id = #{user_id}
	</update>
	
	
	<!-- 회원 방 업데이트 성공 시 회원 유형 변경 -->
	<update id="updateUserType" parameterType="User">
		update tb_user
		set user_type = #{user_type}
		where user_id = #{user_id}
	</update>
	
	
	<!-- 이메일, 이름으로 아이디 찾기 -->
   <select id="findUserid" parameterType="map" resultType="String">
      select user_id from tb_user where user_name=#{user_name} and user_email=#{user_email}
   </select>
   
   
   <!-- 아이디, 전화번호, 이메일로 비밀번호 찾기 -->
   <select id="findUserpw" parameterType="User" resultType="User">
      select * from tb_user where user_id=#{user_id} and user_phone=#{user_phone} and user_email=#{user_email}
   </select>
   
   <!-- 비번 변경  -->
   <update id="updatepw" parameterType="User">
   	update tb_user set user_pw = SHA(#{user_pw}) where user_id = #{user_id}
   </update>
   
   
   <!-- 회원정보 수정 -->
	<update id="updateUser">
		update tb_user
		set user_pw=SHA(#{user_pw}), user_name=#{user_name}, user_email=#{user_email}, user_phone=#{user_phone}, user_addr=#{user_addr}
		where user_id=#{user_id}
	</update>
	
	<!-- 회원 탈퇴 -->
	<delete id="deleteUser" parameterType="String">
		delete from tb_user where user_id=#{user_id}
	</delete>
	<!-- 회원 탈퇴 시 회원이 보드에 적은 문의글도 함께 삭제 -->
	<delete id="deleteBoard" parameterType="String">
		delete from tb_board where user_id=#{user_id}	
	</delete>
	<!-- 회원 탈퇴 시  주문도 삭제-->
	<delete id="deleteOrder" parameterType="String">
        delete from tb_order where user_id = #{user_id}
    </delete>
    <!-- 회원 탈퇴 시 주문 테이블의 order_idx들 가져오기 -->
    <select id="selectOrderIdx" parameterType="String" resultType="Order">
    	select * from tb_order where user_id = #{user_id}
    </select>
    
    <delete id="deleteOrderDetail" parameterType="long">
    	delete from tb_order_detail where order_idx = #{order_idx}
    </delete>
    
    
</mapper>